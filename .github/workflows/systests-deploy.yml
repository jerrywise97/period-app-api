name: Deploy to Docker Hub
on:
  push:
    branches:
      - systest
  pull_request:
    branches:
      - systest
      
jobs:
   build-and-deploy:
    runs-on: ${{matrix.os}}
    strategy:
     matrix:
       os: [ubuntu-latest, windows-latest] #docker not supported on macOS for GAction
    
    steps:
     - name: Checkout code
       uses: actions/checkout@v2
       
     - name: Set up JDK 17
       uses: actions/setup-java@v3
       with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
     - name: Build with Maven
       run: mvn -B package --file pom.xml
      
     - name: Set up Node.js
       uses: actions/setup-node@v2
       with:
         node-version: '14'
        
     - name: use npm to install newman
       run: |
        npm install newman
        
   # - name: newman run
#       run: |
#         newman run https://api.postman.com/collections/26096184-380b125a-a6a3-46f6-a617-f342637f9228?access_key=${{secrets.NEWMAN_ACCESS_KEY}}
    
        
     - name: Build and tag Docker image 
       run: |
        docker build -t jerrywise97/period-app:Latest .
     
     - name: Log in to Docker Hub
       run: |
        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
    
     - name: Push Docker image to Docker Hub
       run: |
        docker push jerrywise97/period-app:Latest
        
     - name: Use docker to login into heroku
       run: |
        docker login --username=_ --password=${{secrets.HEROKU_TOKEN}} registry.heroku.com
        
     - name: Configure AWS credentials
       uses: aws-actions/configure-aws-credentials@v1
       with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

     - name: Login to Amazon ECR
       id: login-ecr
       uses: aws-actions/amazon-ecr-login@v1
      
     - name: Build, tag, and push image to Amazon ECR
       env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: enum-v2-backend
       run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:Latest .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:Latest 
        
#      - name: Update ECS service
#        run: |
#         aws ecs update-service --cluster enumV2 --service enum-v2-backend --force-new-deployment


      
